{
  "version": 3,
  "sources": ["../src/index.js", "../src/log.js", "../src/talk.js", "../src/api/fs.js", "../src/api/user.js", "../src/api/repl.js"],
  "sourcesContent": ["import { registerMessageListener, handshake } from './talk';\nimport {debug} from './log'\nexport * from './api'\nexport * from './log'\n\nexport async function init({permissions}) {\n  const disposeMessageListener = registerMessageListener()\n  await handshake(permissions)\n\n  return () => {\n    disposeMessageListener();\n  }\n}", "export function debug(msg) {\n  console.log(msg)\n}", "import {debug} from './log';\n/**\nMethods for the client to speak with the workspace\n**/\n\n\n/*\n  A handler to route incoming messages\n*/\nconst messageQueue = {}\nconst messageHandler = (ev) => {\n  debug(\"message received\", ev);\n  const { data } = ev;\n\n  messageQueue[data.id](data.payload)\n  delete messageQueue[data.id];\n}\n\n/*\n  Registers listener for incoming messages\n*/\nexport function registerMessageListener() {\n  debug(\"registering message handler\");\n  window.addEventListener('message', messageHandler)\n\n  return () => {\n    debug(\"deregistering message handler\");\n    window.removeEventListener('message', messageHandler);\n  }\n}\n\nexport async function handshake(permissions) {\n  debug('\uD83E\uDD1D')\n  const res = await request({ type: 'handshake', permissions })\n\n  return res;\n}\n\n/*\n  Send a message, expect a response\n*/\nexport async function request(payload) {\n  const id = Math.random();\n\n  return new Promise(resolve => {\n    messageQueue[id] = resolve;\n\n    parent.postMessage({\n      id,\n      payload,\n    }, \"*\")\n  })\n}", "import {request} from '../talk';\n\nexport async function readFile(path) {\n  return request({\n    type: 'readFile',\n    path,\n  })\n}\n\nexport async function writeFile(path, content) {\n  return request({\n    type: 'writeFile',\n    path,\n    content,\n  })\n}\n\nexport async function readDirectory(path) {\n  return request({\n    type: 'readDirectory',\n    path,\n  })\n}\n\nexport async function createDirectory(path) {\n  return request({\n    type: 'createDirectory',\n    path,\n  })\n}", "import {request} from '../talk';\nexport async function readUserInfo() {\n  return request({ type: 'readUserInfo' })\n}\n", "import {request} from '../talk';\nexport async function readReplInfo() {\n  return request({ type: 'readReplInfo' })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,iBAAe,KAAK;AACzB,YAAQ,IAAI,GAAG;AAAA,EACjB;;;ACOA,MAAM,eAAe,CAAC;AACtB,MAAM,iBAAiB,CAAC,OAAO;AAC7B,UAAM,oBAAoB,EAAE;AAC5B,UAAM,EAAE,SAAS;AAEjB,iBAAa,KAAK,IAAI,KAAK,OAAO;AAClC,WAAO,aAAa,KAAK;AAAA,EAC3B;AAKO,qCAAmC;AACxC,UAAM,6BAA6B;AACnC,WAAO,iBAAiB,WAAW,cAAc;AAEjD,WAAO,MAAM;AACX,YAAM,+BAA+B;AACrC,aAAO,oBAAoB,WAAW,cAAc;AAAA,IACtD;AAAA,EACF;AAEA,2BAAgC,aAAa;AAC3C,UAAM,WAAI;AACV,UAAM,MAAM,MAAM,QAAQ,EAAE,MAAM,aAAa,YAAY,CAAC;AAE5D,WAAO;AAAA,EACT;AAKA,yBAA8B,SAAS;AACrC,UAAM,KAAK,KAAK,OAAO;AAEvB,WAAO,IAAI,QAAQ,aAAW;AAC5B,mBAAa,MAAM;AAEnB,aAAO,YAAY;AAAA,QACjB;AAAA,QACA;AAAA,MACF,GAAG,GAAG;AAAA,IACR,CAAC;AAAA,EACH;;;AClDA,0BAA+B,MAAM;AACnC,WAAO,QAAQ;AAAA,MACb,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AAAA,EACH;AAEA,2BAAgC,MAAM,SAAS;AAC7C,WAAO,QAAQ;AAAA,MACb,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAEA,+BAAoC,MAAM;AACxC,WAAO,QAAQ;AAAA,MACb,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AAAA,EACH;AAEA,iCAAsC,MAAM;AAC1C,WAAO,QAAQ;AAAA,MACb,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AAAA,EACH;;;AC5BA,gCAAqC;AACnC,WAAO,QAAQ,EAAE,MAAM,eAAe,CAAC;AAAA,EACzC;;;ACFA,gCAAqC;AACnC,WAAO,QAAQ,EAAE,MAAM,eAAe,CAAC;AAAA,EACzC;;;ALEA,sBAA2B,EAAC,eAAc;AACxC,UAAM,yBAAyB,wBAAwB;AACvD,UAAM,UAAU,WAAW;AAE3B,WAAO,MAAM;AACX,6BAAuB;AAAA,IACzB;AAAA,EACF;",
  "names": []
}
